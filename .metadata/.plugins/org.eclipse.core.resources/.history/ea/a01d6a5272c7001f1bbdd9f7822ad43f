package com.sm.entities;

import java.time.LocalDate;
import java.time.LocalDateTime;

import org.springframework.boot.context.properties.bind.DefaultValue;

import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.validation.constraints.Email;
import jakarta.validation.constraints.NotEmpty;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Pattern;
import jakarta.validation.constraints.Size;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

@Entity
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
public class User {

    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Integer serialNo;

    @NotNull(message = "User Id is missing")
    @Size(min = 6, max = 7, message = "Invalid User Id")
    @NotEmpty(message = "UserId cannot be empty")
    @Id
    private String userid;

    @NotEmpty(message = "First Name cannot be empty")
    @Size(min = 5, max = 52, message = "Invalid Entry in First Name Field")
    private String firstName;

    @NotEmpty(message = "Last Name cannot be empty")
    @Size(min = 5, max = 52, message = "Invalid Entry in Last Name Field")
    private String lastName;

    @NotEmpty(message = "Gender cannot be empty")
    @Size(min = 4, max = 11, message = "Invalid Input")
    private String gender;

    @NotNull(message = "Mobile number is missing")
    @Pattern(regexp = "^[6-9][0-9]{9}$", message = "Mobile number must start with 6, 7, 8, or 9 and must be 10 digits long")
    private Long mobile;

    @Email(message = "Invalid Email Id")
    @NotEmpty(message = "Email cannot be empty")
    private String emailId;

    @NotEmpty(message = "Password cannot be empty")
    private String password;

    @NotEmpty(message = "Role cannot be empty")
    private String role;

    private LocalDate createdOn;

    private LocalDate lastUpdatedOn;

    @NotEmpty(message = "Created By cannot be empty")
    private String createdBy;

    @DefaultValue(value = 0)
    private int isLocked;

    private int pinStatus;

    private int isActivated;

    private LocalDateTime lastLogin;
}
