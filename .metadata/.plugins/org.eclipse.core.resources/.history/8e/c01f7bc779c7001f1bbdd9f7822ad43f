package com.sm.controller;

import com.sm.entities.User;
import com.sm.service.UserService;
import jakarta.validation.Valid;
import jakarta.validation.constraints.NotEmpty;
import jakarta.validation.constraints.Pattern;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class UserController {

    private final UserService service;

    public UserController(UserService service) {
        this.service = service;
    }

    @PostMapping("/users/createuser")
    public ResponseEntity<String> createUser(@Valid @RequestBody User user, BindingResult result) {
        // Check if there are any validation errors
        if (result.hasErrors()) {
            StringBuilder errorMessage = new StringBuilder("Validation errors: ");
            result.getAllErrors().forEach(error -> errorMessage.append(error.getDefaultMessage()).append(" "));
            return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(errorMessage.toString());
        }

        // Proceed with user creation logic
        int creationStatus = service.userCreationRequestService(user);
        if (creationStatus == 0) {
            return ResponseEntity.status(HttpStatus.CREATED).body("User has been created successfully.");
        } else if (creationStatus == 1) {
            return ResponseEntity.status(HttpStatus.BAD_REQUEST).body("User already exists.");
        } else {
            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body("Server failure: Failed to process your request.");
        }
    }
}
